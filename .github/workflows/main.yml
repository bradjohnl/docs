name: Docusaurus CICD

on:
  push:
    branches: "*"

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      selected_node_version: 14
      node_options_build: --max-old-space-size=4096

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ env.selected_node_version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.selected_node_version }}
          cache: yarn
          
      - name: Yarn install
        run: |
          NODE_OPTIONS="$node_options_build" 
          yarn install

      - name: Run code analysis
        run: |
          NODE_OPTIONS="$node_options_build"
          yarn format

      - name: Build app
        run: |
          NODE_OPTIONS="$node_options_build"
          yarn build --out-dir dist/docusaurus

      - name: Upload target version artifact
        uses: actions/upload-artifact@v2
        with:
          name: docs-app
          path: dist/docusaurus

      - name: Upload pip-requirements-ci.txt to be used in the test-deploy step
        uses: actions/upload-artifact@v2
        with:
          name: pip-requirements-ci
          path: .github/workflows/pip-requirements-ci.txt

  test-deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:  
    - uses: actions/download-artifact@master
      with:
        name: docs-app
        path: dist/docusaurus

    - uses: actions/download-artifact@master
      with:
        name: pip-requirements-ci

    - uses: actions/setup-python@v2
      with:
        cache: 'pip'
        cache-dependency-path: 'pip-requirements-ci.txt'

    #https://github.com/satackey/action-docker-layer-caching
    - uses: satackey/action-docker-layer-caching@v0.0.11
      # Ignore the failure of a step and avoid terminating the job.
      continue-on-error: true

    - name: Configure localstack
      run: |
        echo "install LocalStack cli and awslocal"
        pip install localstack awscli-local[ver1]
        echo "Make sure to pull the latest version of the image"
        docker pull localstack/localstack
        echo "Start LocalStack in the background"
        localstack start -d
        #Wait 30 seconds for the LocalStack container to become ready before timing out
        echo "Waiting for LocalStack startup..."
        localstack wait -t 30
        echo "Startup complete"
        awslocal s3 mb s3://docs-test-bucket
        echo "LocalStack setup complete"

    #https://stackoverflow.com/questions/44382709/aws-s3-bucket-404-not-found/51143174#51143174
    #https://sammeechward.com/aws-cli-s3-static-website/
    - name: Configure S3 to serve the static site
      run: |
        awslocal s3api put-public-access-block \
        --bucket docs-test-bucket \
        --public-access-block-configuration "BlockPublicAcls=false,IgnorePublicAcls=false,BlockPublicPolicy=false,RestrictPublicBuckets=false"
        awslocal s3api put-bucket-policy --bucket your-bucket-name --policy "{
        \"Version\": \"2012-10-17\",
        \"Statement\": [
            {
                \"Sid\": \"PublicReadGetObject\",
                \"Effect\": \"Allow\",
                \"Principal\": \"*\",
                \"Action\": \"s3:GetObject\",
                \"Resource\": \"arn:aws:s3:::your-bucket-name/*\"
            }
        ]}"
        awslocal s3 website s3://docs-test-bucket/ --index-document index.html --error-document index.html

    #TODO: Investigate about replicating an AWS S3 bucket into localstack so that tests are more reliable
    #TODO: Reduce code duplication with reusable workflows. The problem is that the LocalStack container does not persist between jobs.
    #     One could actually configure localstack docker container to persist a volume on the runner and then upload the artifact.
    - name: Deploy to localStack to test
      run: |
        awslocal s3 sync dist/docusaurus s3://docs-test-bucket/docs

    #TODO: Avoid code repetition, but it's tricky as GH does not support loops on single actions. Might use good ol' bash.
    #TODO: This can be expanded to test every URL available.
    - name: Test home page
      run: |
        echo "Testing if webpage responds correctly"
        curl --fail http://localhost:4566/docs-test-bucket/docs/index.html

    - name: Test a random page
      run: |
        echo "Testing if a page responds correctly"
        curl --fail http://localhost:4566/docs-test-bucket/docs/operators/create

    - name: Test another random page
      run: |
        echo "Testing if a page responds correctly"
        curl --fail http://localhost:4566/docs-test-bucket/docs/design/serialization-standard

  deploy:
    needs: test-deploy
    runs-on: ubuntu-latest

    steps:
    - name: Deploy to AWS when main branch gets updated
      uses: reggionick/s3-deploy@v3
      if: github.ref == 'refs/heads/main'
      with:
          folder: dist/docusaurus
          bucket: casper-docusaurus
          private: true
          noCache: true
          invalidation: /
          bucket-region: ${{ secrets.S3_BUCKET_REGION }}
          dist-id: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}

    #TODO: Avoid code repetition, but it's tricky as GH does not support loops on single actions. Might use good ol' bash.
    #TODO: This can be expanded to test every URL available. 
    - name: Test home page
      run: |
        echo "Testing if webpage responds correctly"
        curl --fail https://casper.network/docs/index.html

    - name: Test a random page
      run: |
        echo "Testing if a page responds correctly"
        curl --fail https://casper.network/docs-test-bucket/docs/operators/create

    - name: Test another random page
      run: |
        echo "Testing if a page responds correctly"
        curl --fail https://casper.network/docs/design/serialization-standard
