"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[5242],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),d=a,h=u["".concat(l,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1310:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return c},default:function(){return u}});var r=n(2122),a=n(9756),o=(n(7294),n(3905)),i=["components"],s={},l="Contract Implementation",p={unversionedId:"dapp-dev-guide/tutorials/erc20/implementation",id:"dapp-dev-guide/tutorials/erc20/implementation",isDocsHomePage:!1,title:"Contract Implementation",description:"In GitHub, you will find a library and an example implementation of the ERC-20 token for the Casper Network. The ERC-20 standard is defined in an Ethereum Improvement Proposal (EIP).",source:"@site/source/docs/casper/dapp-dev-guide/tutorials/erc20/implementation.md",sourceDirName:"dapp-dev-guide/tutorials/erc20",slug:"/dapp-dev-guide/tutorials/erc20/implementation",permalink:"/docs/dapp-dev-guide/tutorials/erc20/implementation",editUrl:"https://github.com/casper-network/documentation/tree/master/docs/casper/dapp-dev-guide/tutorials/erc20/implementation.md",tags:[],version:"current",frontMatter:{},sidebar:"dapp-dev-guide",previous:{title:"Preparation",permalink:"/docs/dapp-dev-guide/tutorials/erc20/prepare"},next:{title:"Testing Framework",permalink:"/docs/dapp-dev-guide/tutorials/erc20/tests"}},c=[{value:"Installing Required Crates",id:"installing-required-crates",children:[]},{value:"Initializing the Contract",id:"initializing-the-contract",children:[]},{value:"Contract Methods",id:"contract-methods",children:[]}],m={toc:c};function u(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"contract-implementation"},"Contract Implementation"),(0,o.kt)("p",null,"In ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/casper-ecosystem/erc20"},"GitHub"),", you will find a library and an example implementation of the ERC-20 token for the Casper Network. The ERC-20 standard is defined in an ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md#"},"Ethereum Improvement Proposal (EIP)"),"."),(0,o.kt)("h2",{id:"installing-required-crates"},"Installing Required Crates"),(0,o.kt)("p",null,"Since this is a Rust implementation of the ERC-20 token for Casper, we will go over a few implementation details. Casper contracts require the following crates to be included:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.rs/casper-contract/1.3.3/casper_contract/"},"casper_contract")," - A Rust library for writing smart contracts on the Casper Network"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.rs/casper-types/latest/casper_types/"},"casper_types")," - Types used to allow creation of Wasm contracts and tests for use on the Casper Network"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docs.rs/casper-erc20/latest/casper_erc20/"},"casper_erc20")," - A library for developing ERC-20 tokens for the Casper Network")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},"    use casper_contract::{contract_api::runtime, unwrap_or_revert::UnwrapOrRevert};\n\n    use casper_types::{CLValue, U256};\n\n    use casper_erc20::{\n        constants::{\n            ADDRESS_RUNTIME_ARG_NAME, AMOUNT_RUNTIME_ARG_NAME, DECIMALS_RUNTIME_ARG_NAME,\n            NAME_RUNTIME_ARG_NAME, OWNER_RUNTIME_ARG_NAME, RECIPIENT_RUNTIME_ARG_NAME,\n            SPENDER_RUNTIME_ARG_NAME, SYMBOL_RUNTIME_ARG_NAME, TOTAL_SUPPLY_RUNTIME_ARG_NAME,\n        },\n        Address, ERC20,\n    };\n")),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"In Rust, the keyword use is like an include statement in C/C++."))),(0,o.kt)("h2",{id:"initializing-the-contract"},"Initializing the Contract"),(0,o.kt)("p",null,"When you deploy the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/casper-ecosystem/erc20/blob/master/example/erc20-token/src/main.rs"},"contract"),", you need to initialize it with a ",(0,o.kt)("inlineCode",{parentName:"p"},"call()")," function and define ",(0,o.kt)("inlineCode",{parentName:"p"},"name"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"symbol"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"decimals"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"total_supply"),", which are the starting token supply."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},"    #[no_mangle]\n    fn call() {\n        let name: String = runtime::get_named_arg(NAME_RUNTIME_ARG_NAME);\n        let symbol: String = runtime::get_named_arg(SYMBOL_RUNTIME_ARG_NAME);\n        let decimals = runtime::get_named_arg(DECIMALS_RUNTIME_ARG_NAME);\n        let total_supply = runtime::get_named_arg(TOTAL_SUPPLY_RUNTIME_ARG_NAME);\n\n        let _token = ERC20::install(name, symbol, decimals, total_supply).unwrap_or_revert();\n    }\n")),(0,o.kt)("h2",{id:"contract-methods"},"Contract Methods"),(0,o.kt)("p",null,"Review the contract in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/casper-ecosystem/erc20/blob/master/example/erc20-token/src/main.rs"},"Github")," to see the implementation of the contract methods. If you have any questions, review the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.rs/casper-erc20/latest/casper_erc20/"},"casper_erc20")," library and the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md#"},"EIP-20")," standard."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"allowance")," - Returns the amount of owner\u2019s tokens allowed to be spent by the spender"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"approve")," - Allows a spender to transfer up to an amount of the direct caller\u2019s tokens"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"balance_of")," - Returns the token balance of the owner"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"decimals")," - Returns the decimals of the token"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"name")," - Returns the name of the token"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"symbol")," - Returns the symbol of the token"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"total_supply")," - Returns the total supply of the token"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"transfer")," - Transfers an amount of tokens from the direct caller to a recipient"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"transfer_from")," - Transfers an amount of tokens from the owner to a recipient, if the direct caller has been previously approved to spend the specified amount on behalf of the owner")))}u.isMDXComponent=!0}}]);